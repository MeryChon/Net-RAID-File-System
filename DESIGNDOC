სერვერი მუშაობისთვის მოითხოვს openssl ბიბლიოთეკას. დაყენება : apt-get libssl ???

სერვერისა და კლიენტის კოდი განთავსებულია ცალ-ცალკე შესაბამის დირექტორიებში. 

1) კლიენტის გაშევბისას პროგრამა ხსნის და კითხულობს კონფიგურაციის ფაილს. თუ ფაილი ვერ მოიძებნა, იწერება შესაბამისი შეტყობინება და კლიენტი წყვეტს მუშაობას.
კონფიგურაციის ფაილიდან წაკითხული ინფორმაცია ინახება structs.h ფაილსი აღწერილ სტრუქტურებში:

//ინახავს ინფორმაციას კლიენტის (და არა დისკების) შესახებ
struct meta_info {
	char* errorlog_path;
	int cache_size; // in MB
	char* cache_replacement_algorithm; //only implementing lru
	int timeout; // in s?
};

//ინახავს თითოეულ დისკთან დაკავშირებულ ინფორმაციას
struct disk_info {
	char* diskname;
	char* mountpoint;
	int raid;
	char** servers;
	int num_servers;
	char* hotswap; 
};

struct disk_info* raids-ში  ინახება ინფორმაცია კონფიგურაციის ფაილში გაწერილი ყველა დისკის შესახებ.

ამ სტრუქტურების ცალკე ფაილში გატანა საჭირო იყო, რათა მათი გამოყენება შესაძლებელი ყოფილიყო როგორც net_raid_client.c-ში, რომელიც ეშვება კლიენტის გაშვებისას, ასევე raid1_fuse.c-ში, რომელშიც ხდება სისქოლების გადატვირთვა.

2) კონფიგურაციის ფაილის წაკითხვის შემდეგ კლიენტი გადაუყვება raids მასივში შენახულ დისკებს და თითოეულისთვის ქმნის ცალკე პროცესს. ეს პროცესი თავის მხრივ იძახებს შესაბამის wrapper-ს fuse_main-ზე. რათა მოხდეს თითოეული სანახის mountpoint-ის დამაუნთება და შესაბამისი სისქოლების გამოძახება.




